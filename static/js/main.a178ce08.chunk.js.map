{"version":3,"sources":["actions/actionTypes.js","components/Loading/index.jsx","App/routes.js","App/index.jsx","reducers/movies.js","reducers/shows.js","reducers/item.js","reducers/auth.js","reducers/database.js","reducers/search.js","reducers/discover.js","reducers/index.js","store/index.js","serviceWorker.js","index.js","actions/error.js","axios-orders.js","actions/movies.js","actions/shows.js","actions/item.js","config/firebase.js","actions/auth.js","actions/database.js","actions/search.js","actions/discover.js","actions/index.js"],"names":["__webpack_require__","d","__webpack_exports__","SET_CURRENT_MOVIES","SET_POPULAR_MOVIES","SET_UPCOMING_MOVIES","SET_TOP_MOVIES","SET_CURRENT_SHOWS","SET_POPULAR_SHOWS","SET_AIRING_TODAY_SHOWS","SET_TOP_SHOWS","SET_ITEM_TYPE","SET_QUERY_ITEM","SET_QUERY_ITEM_DETAILS","SET_QUERY_ITEM_VIDEOS","SET_SIMILAR_ITEMS","SET_ITEM_CLEAR","FETCH_USER_SUCCESS","LOGOUT_SUCCESS","SET_REDIRECT_PATH","FETCH_FAVORITE_LIST_SUCCESS","FETCH_WATCH_LATER_LIST_SUCCESS","SET_SEARCH_RESULTS","SET_DISCOVER_MOVIE_RESULTS","SET_DISCOVER_SHOW_RESULTS","SET_ERROR","Loading","react_default","a","createElement","className","routes","component","lazy","e","then","bind","path","Promise","all","App","componentDidMount","_this","props","fetchUser","fetchLists","userId","fetchList","this","BrowserRouter","Switch","map","route","Route","key","render","react","fallback","components_Loading","Component","connect","state","auth","dispatch","actions","type","initialState","current","popular","top","upcoming","airingToday","credits","videos","similar","redirectPath","favorite","watch","searchResults","movies","shows","combineReducers","arguments","length","undefined","action","actionTypes","Object","objectSpread","item","itemType","items","database","list","search","discover","composeEnhancer","compose","store","createStore","rootReducer","applyMiddleware","thunk","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","app","es","src_App","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","setError","instance","axios","create","baseURL","getCurrentMovies","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","res","data","err","stop","_x","apply","getPopularMovies","_ref2","_callee2","_context2","_x2","getUpcomingMovies","_ref3","_callee3","_context3","_x3","getTopMovies","_ref4","_callee4","_context4","_x4","getCurrentShows","getPopularShows","getAiringTodayShows","getTopShows","setItemType","setItemClear","getQueryItem","itemId","getQueryItemCredits","getQueryItemVideos","getSimilarItems","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","googleProvider","GoogleAuthProvider","authRef","databaseRef","ref","fetchUserSuccess","onAuthStateChanged","user","uid","createUser","email","password","createUserWithEmailAndPassword","loginUserWithEmailPassword","signInWithEmailAndPassword","loginUserWithSocial","signInWithPopup","logout","signOut","setRedirectPath","addToList","listType","child","push","removeFromList","remove","on","snapshot","fetchFavoriteListSuccess","val","fetchWatchLaterListSuccess","getSearchResults","queryWord","getDiscoverMovieResults","year","ratings","sortBy","orderBy","min","max","getDiscoverShowResults","error_setError","movies_getCurrentMovies","movies_getPopularMovies","movies_getTopMovies","movies_getUpcomingMovies","shows_getCurrentShows","shows_getAiringTodayShows","shows_getPopularShows","shows_getTopShows","item_setItemType","item_setItemClear","item_getQueryItem","item_getQueryItemCredits","item_getQueryItemVideos","item_getSimilarItems","auth_createUser","auth_loginUserWithEmailPassword","auth_loginUserWithSocial","auth_fetchUser","auth_logout","auth_setRedirectPath","database_addToList","database_removeFromList","database_fetchList","search_getSearchResults","discover_getDiscoverMovieResults","discover_getDiscoverShowResults"],"mappings":"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","file":"static/js/main.a178ce08.chunk.js","sourcesContent":["export const SET_CURRENT_MOVIES = 'SET_CURRENT_MOVIES'\r\nexport const SET_POPULAR_MOVIES = 'SET_POPULAR_MOVIES'\r\nexport const SET_UPCOMING_MOVIES = 'SET_UPCOMING_MOVIES'\r\nexport const SET_TOP_MOVIES = 'SET_TOP_MOVIES'\r\n\r\nexport const SET_CURRENT_SHOWS = 'SET_CURRENT_SHOWS'\r\nexport const SET_POPULAR_SHOWS = 'SET_POPULAR_SHOWS'\r\nexport const SET_AIRING_TODAY_SHOWS = 'SET_AIRING_TODAY_SHOWS'\r\nexport const SET_TOP_SHOWS = 'SET_TOP_SHOWS'\r\n\r\nexport const SET_ITEM_TYPE = 'SET_ITEM_TYPE'\r\nexport const SET_QUERY_ITEM = 'SET_QUERY_ITEM'\r\nexport const SET_QUERY_ITEM_DETAILS = 'SET_QUERY_ITEM_DETAILS'\r\nexport const SET_QUERY_ITEM_VIDEOS = 'SET_QUERY_ITEM_VIDEOS'\r\nexport const SET_SIMILAR_ITEMS = 'SET_SIMILAR_ITEMS'\r\nexport const SET_ITEM_CLEAR = 'SET_ITEM_CLEAR'\r\n\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS'\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\nexport const SET_REDIRECT_PATH = 'SET_REDIRECT_PATH'\r\n\r\nexport const FETCH_FAVORITE_LIST_SUCCESS = 'FETCH_FAVORITE_LIST_SUCCESS'\r\nexport const FETCH_WATCH_LATER_LIST_SUCCESS = 'FETCH_WATCH_LATER_LIST_SUCCESS'\r\n\r\nexport const SET_SEARCH_RESULTS = 'SET_SEARCH_RESULTS'\r\n\r\nexport const SET_DISCOVER_MOVIE_RESULTS = 'SET_DISCOVER_MOVIE_RESULTS'\r\nexport const SET_DISCOVER_SHOW_RESULTS = 'SET_DISCOVER_SHOW_RESULTS'\r\n\r\nexport const SET_ERROR = 'SET_ERROR'\r\n","import React from 'react'\r\n\r\nimport './styles.scss'\r\n\r\nconst Loading = () => (\r\n  <div className='loading'>\r\n    <div className='spinner-container'>\r\n      <div className='spinner'>\r\n        <div className='double-bounce1' />\r\n        <div className='double-bounce2' />\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\nexport default Loading\r\n","import { lazy } from 'react'\r\n\r\nexport default [\r\n  {\r\n    component: lazy(() => import('../components/Layout')),\r\n    path: '/auth'\r\n  },\r\n  {\r\n    component: lazy(() => import('../components/HeaderLayout')),\r\n    path: '/'\r\n  }\r\n]\r\n","import React, { Component, Suspense } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Loading from '../components/Loading'\r\n\r\nimport routes from './routes'\r\nimport * as actions from '../actions'\r\n\r\nclass App extends Component {\r\n  componentDidMount = () => {\r\n    this.props.fetchUser()\r\n  }\r\n\r\n  fetchLists = () => {\r\n    if (this.props.userId) {\r\n      this.props.fetchList('watch', this.props.userId)\r\n      this.props.fetchList('favorite', this.props.userId)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='app'>\r\n        {this.fetchLists()}\r\n        <Router>\r\n          <Switch>\r\n            {routes.map(route => (\r\n              <Route\r\n                key={route.path}\r\n                path={route.path}\r\n                render={() => (\r\n                  <Suspense fallback={<Loading />}>\r\n                    <route.component />\r\n                  </Suspense>\r\n                )}\r\n              />\r\n            ))}\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userId: state.auth.userId\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchUser: () => dispatch(actions.fetchUser()),\r\n  fetchList: (type, userId) => dispatch(actions.fetchList(type, userId))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)\r\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  current: null,\r\n  popular: null,\r\n  top: null,\r\n  upcoming: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_CURRENT_MOVIES:\r\n      return { ...state, current: action.movies }\r\n\r\n    case actionTypes.SET_UPCOMING_MOVIES:\r\n      return { ...state, upcoming: action.movies }\r\n\r\n    case actionTypes.SET_POPULAR_MOVIES:\r\n      return { ...state, popular: action.movies }\r\n\r\n    case actionTypes.SET_TOP_MOVIES:\r\n      return { ...state, top: action.movies }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  current: null,\r\n  popular: null,\r\n  top: null,\r\n  airingToday: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_CURRENT_SHOWS:\r\n      return { ...state, current: action.shows }\r\n\r\n    case actionTypes.SET_AIRING_TODAY_SHOWS:\r\n      return { ...state, airingToday: action.shows }\r\n\r\n    case actionTypes.SET_POPULAR_SHOWS:\r\n      return { ...state, popular: action.shows }\r\n\r\n    case actionTypes.SET_TOP_SHOWS:\r\n      return { ...state, top: action.shows }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  type: 'movie',\r\n  current: null,\r\n  credits: null,\r\n  videos: null,\r\n  similar: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_ITEM_TYPE:\r\n      return { ...state, type: action.itemType }\r\n\r\n    case actionTypes.SET_ITEM_CLEAR:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n        credits: null,\r\n        videos: null,\r\n        similar: null\r\n      }\r\n\r\n    case actionTypes.SET_QUERY_ITEM:\r\n      return { ...state, current: action.item }\r\n\r\n    case actionTypes.SET_QUERY_ITEM_DETAILS:\r\n      return { ...state, credits: action.credits }\r\n\r\n    case actionTypes.SET_QUERY_ITEM_VIDEOS:\r\n      return { ...state, videos: action.videos }\r\n\r\n    case actionTypes.SET_SIMILAR_ITEMS:\r\n      return { ...state, similar: action.items }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  userId: '',\r\n  redirectPath: '/'\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_USER_SUCCESS:\r\n      return { ...state, userId: action.userId }\r\n\r\n    case actionTypes.SET_REDIRECT_PATH:\r\n      return { ...state, redirectPath: action.path }\r\n\r\n    case actionTypes.LOGOUT_SUCCESS:\r\n      return { ...state, userId: '', redirectPath: '/' }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  favorite: null,\r\n  watch: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_FAVORITE_LIST_SUCCESS:\r\n      return { ...state, favorite: action.list }\r\n\r\n    case actionTypes.FETCH_WATCH_LATER_LIST_SUCCESS:\r\n      return { ...state, watch: action.list }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  searchResults: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_SEARCH_RESULTS:\r\n      return { ...state, searchResults: action.items }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  movies: null,\r\n  shows: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_DISCOVER_MOVIE_RESULTS:\r\n      return { ...state, movies: action.movies }\r\n\r\n    case actionTypes.SET_DISCOVER_SHOW_RESULTS:\r\n      return { ...state, shows: action.shows }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport movies from './movies'\r\nimport shows from './shows'\r\nimport item from './item'\r\nimport auth from './auth'\r\nimport database from './database'\r\nimport search from './search'\r\nimport discover from './discover'\r\n\r\nexport default combineReducers({\r\n  movies,\r\n  shows,\r\n  item,\r\n  auth,\r\n  database,\r\n  search,\r\n  discover\r\n})\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from '../reducers'\r\n\r\n// redux dev tools in developemt mode\r\nconst composeEnhancer =\r\n  process.env.NODE_ENV === 'development'\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : null || compose\r\n\r\n// export store\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport App from './App'\n\nimport { store } from './store'\nimport * as serviceWorker from './serviceWorker'\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\nserviceWorker.register()\n","import { SET_ERROR } from './actionTypes'\r\n\r\nexport const setError = () => ({\r\n  type: SET_ERROR\r\n})\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3'\r\n})\r\n\r\nexport default instance\r\n","import * as actionTypes from './actionTypes'\r\nimport { setError } from './index'\r\nimport axios from '../axios-orders'\r\n\r\n////////////////////////////////////////////////////////////////////////\r\nexport const setCurrentMovies = movies => ({\r\n  type: actionTypes.SET_CURRENT_MOVIES,\r\n  movies\r\n})\r\n\r\nexport const getCurrentMovies = () => async dispatch => {\r\n  return axios\r\n    .get(\r\n      `/movie/now_playing?api_key=${\r\n        process.env.REACT_APP_TMDB_API\r\n      }&language=en-US&page=1`\r\n    )\r\n    .then(res => dispatch(setCurrentMovies(res.data)))\r\n    .catch(err => dispatch(setError()))\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////\r\nexport const setPopularMovies = movies => ({\r\n  type: actionTypes.SET_POPULAR_MOVIES,\r\n  movies\r\n})\r\n\r\nexport const getPopularMovies = () => async dispatch => {\r\n  return axios\r\n    .get(\r\n      `/movie/popular?api_key=${\r\n        process.env.REACT_APP_TMDB_API\r\n      }&language=en-US&page=1`\r\n    )\r\n    .then(res => dispatch(setPopularMovies(res.data)))\r\n    .catch(err => dispatch(setError()))\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////\r\nexport const setUpcomingMovies = movies => ({\r\n  type: actionTypes.SET_UPCOMING_MOVIES,\r\n  movies\r\n})\r\n\r\nexport const getUpcomingMovies = () => async dispatch => {\r\n  return axios\r\n    .get(\r\n      `/movie/upcoming?api_key=${\r\n        process.env.REACT_APP_TMDB_API\r\n      }&language=en-US&page=1`\r\n    )\r\n    .then(res => dispatch(setUpcomingMovies(res.data)))\r\n    .catch(err => dispatch(setError()))\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////\r\nexport const setTopMovies = movies => ({\r\n  type: actionTypes.SET_TOP_MOVIES,\r\n  movies\r\n})\r\n\r\nexport const getTopMovies = () => async dispatch => {\r\n  return axios\r\n    .get(\r\n      `/movie/top_rated?api_key=${\r\n        process.env.REACT_APP_TMDB_API\r\n      }&language=en-US&page=1`\r\n    )\r\n    .then(res => dispatch(setTopMovies(res.data)))\r\n    .catch(err => dispatch(setError()))\r\n}\r\n","import * as actionTypes from './actionTypes'\r\nimport { setError } from './index'\r\nimport axios from '../axios-orders'\r\n\r\n//////////////////////////////////////////////////////////////////////\r\nexport const setCurrentShows = shows => ({\r\n  type: actionTypes.SET_CURRENT_SHOWS,\r\n  shows\r\n})\r\n\r\nexport const getCurrentShows = () => async dispatch => {\r\n  return axios\r\n    .get(\r\n      `/tv/on_the_air?api_key=${\r\n        process.env.REACT_APP_TMDB_API\r\n      }&language=en-US&page=1`\r\n    )\r\n    .then(res => dispatch(setCurrentShows(res.data)))\r\n    .catch(err => dispatch(setError()))\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////\r\nexport const setPopularShows = shows => ({\r\n  type: actionTypes.SET_POPULAR_SHOWS,\r\n  shows\r\n})\r\n\r\nexport const getPopularShows = () => async dispatch => {\r\n  return axios\r\n    .get(\r\n      `/tv/popular?api_key=${\r\n        process.env.REACT_APP_TMDB_API\r\n      }&language=en-US&page=1`\r\n    )\r\n    .then(res => dispatch(setPopularShows(res.data)))\r\n    .catch(err => dispatch(setError()))\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////\r\nexport const setAiringTodayShows = shows => ({\r\n  type: actionTypes.SET_AIRING_TODAY_SHOWS,\r\n  shows\r\n})\r\n\r\nexport const getAiringTodayShows = () => async dispatch => {\r\n  return axios\r\n    .get(\r\n      `/tv/airing_today?api_key=${\r\n        process.env.REACT_APP_TMDB_API\r\n      }&language=en-US&page=1`\r\n    )\r\n    .then(res => dispatch(setAiringTodayShows(res.data)))\r\n    .catch(err => dispatch(setError()))\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////\r\nexport const setTopShows = shows => ({\r\n  type: actionTypes.SET_TOP_SHOWS,\r\n  shows\r\n})\r\n\r\nexport const getTopShows = () => async dispatch => {\r\n  return axios\r\n    .get(\r\n      `/tv/top_rated?api_key=${\r\n        process.env.REACT_APP_TMDB_API\r\n      }&language=en-US&page=1`\r\n    )\r\n    .then(res => dispatch(setTopShows(res.data)))\r\n    .catch(err => dispatch(setError()))\r\n}\r\n","import * as actionTypes from './actionTypes'\r\nimport { setError } from './index'\r\nimport axios from '../axios-orders'\r\n\r\n// set type - movie / tv - sync\r\nexport const setItemType = itemType => ({\r\n  type: actionTypes.SET_ITEM_TYPE,\r\n  itemType\r\n})\r\n\r\n///////////////////////////////////////////////////////////\r\n//clear item\r\nexport const setItemClear = () => ({\r\n  type: actionTypes.SET_ITEM_CLEAR\r\n})\r\n\r\n//////////////////////////////////////////////////////////////\r\n// set base item - tv/show - details\r\nexport const setQueryItem = item => ({\r\n  type: actionTypes.SET_QUERY_ITEM,\r\n  item\r\n})\r\n\r\n// get base item - tv/show - details - async\r\nexport const getQueryItem = (itemType, itemId) => dispatch => {\r\n  return axios\r\n    .get(\r\n      `/${itemType}/${itemId}?api_key=${\r\n        process.env.REACT_APP_TMDB_API\r\n      }&language=en-US`\r\n    )\r\n    .then(res => dispatch(setQueryItem(res.data)))\r\n    .catch(err => setError())\r\n}\r\n\r\n/////////////////////////////////////////////////////////////\r\n// set item - tv/show - cast\r\nexport const setQueryItemCredits = credits => ({\r\n  type: actionTypes.SET_QUERY_ITEM_DETAILS,\r\n  credits\r\n})\r\n\r\n// get item - tv/show - cast - async\r\nexport const getQueryItemCredits = (itemType, itemId) => dispatch => {\r\n  return axios\r\n    .get(\r\n      `/${itemType}/${itemId}/credits?api_key=${\r\n        process.env.REACT_APP_TMDB_API\r\n      }&language=en-US`\r\n    )\r\n    .then(res => dispatch(setQueryItemCredits(res.data)))\r\n    .catch(err => setError())\r\n}\r\n\r\n//////////////////////////////////////////////////////////////\r\n// set item - movie/tv - videos/trailers\r\nexport const setQueryItemVideos = videos => ({\r\n  type: actionTypes.SET_QUERY_ITEM_VIDEOS,\r\n  videos\r\n})\r\n\r\n// get item - movie/tv - videos/trailers - async\r\nexport const getQueryItemVideos = (itemType, itemId) => dispatch => {\r\n  return axios\r\n    .get(\r\n      `/${itemType}/${itemId}/videos?api_key=${\r\n        process.env.REACT_APP_TMDB_API\r\n      }&language=en-US`\r\n    )\r\n    .then(res => dispatch(setQueryItemVideos(res.data)))\r\n    .catch(err => setError())\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////\r\n//set similar items - tv /movies\r\n\r\nexport const setSimilarItems = items => ({\r\n  type: actionTypes.SET_SIMILAR_ITEMS,\r\n  items\r\n})\r\n\r\n// get simimar items - movie / tv shows\r\nexport const getSimilarItems = (itemType, itemId) => async dispatch => {\r\n  return axios\r\n    .get(\r\n      `/${itemType}/${itemId}/similar?api_key=${\r\n        process.env.REACT_APP_TMDB_API\r\n      }&language=en-US&page=1`\r\n    )\r\n    .then(res => dispatch(setSimilarItems(res.data)))\r\n    .catch(err => dispatch(setError()))\r\n}\r\n","import { initializeApp, auth, database } from 'firebase'\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyDoZ46kovfRjmggqNNnSbpbAfxDPsyDKW0',\r\n  authDomain: 'movie-rolls.firebaseapp.com',\r\n  databaseURL: 'https://movie-rolls.firebaseio.com',\r\n  projectId: 'movie-rolls',\r\n  storageBucket: 'movie-rolls.appspot.com',\r\n  messagingSenderId: '39363327590'\r\n}\r\n\r\ninitializeApp(config)\r\n\r\nconst googleProvider = new auth.GoogleAuthProvider()\r\n\r\nconst authRef = auth()\r\nconst databaseRef = new database().ref()\r\n\r\nexport { googleProvider, authRef, databaseRef }\r\n","import * as actionTypes from './actionTypes'\r\n\r\nimport { setError } from './index'\r\nimport { authRef, googleProvider } from '../config/firebase'\r\n\r\n///////////////////////////////////////////////////////////\r\nexport const fetchUserSuccess = userId => ({\r\n  type: actionTypes.FETCH_USER_SUCCESS,\r\n  userId\r\n})\r\n\r\n//fetch user if logged in\r\nexport const fetchUser = () => dispatch => {\r\n  authRef.onAuthStateChanged(user => {\r\n    if (user) {\r\n      dispatch(fetchUserSuccess(user.uid))\r\n    } else {\r\n      dispatch(fetchUserSuccess(null))\r\n    }\r\n  })\r\n}\r\n\r\n//sign up user\r\nexport const createUser = (email, password) => dispatch => {\r\n  authRef\r\n    .createUserWithEmailAndPassword(email, password)\r\n    .then(res => console.log('success'))\r\n    .catch(err => setError())\r\n}\r\n\r\n/////////////////////////////////////////////////////////////\r\n// login user with email password\r\n\r\nexport const loginUserWithEmailPassword = (email, password) => dispatch => {\r\n  return authRef\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then(res => console.log('success'))\r\n    .catch(err => setError())\r\n}\r\n\r\n// login user with social\r\nexport const loginUserWithSocial = () => dispatch => {\r\n  return authRef\r\n    .signInWithPopup(googleProvider)\r\n    .then(res => console.log('success'))\r\n    .catch(err => setError())\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////\r\n///logout user\r\n\r\nexport const logoutSuccess = () => ({\r\n  type: actionTypes.LOGOUT_SUCCESS\r\n})\r\n\r\nexport const logout = () => dispatch => {\r\n  return authRef\r\n    .signOut()\r\n    .then(() => dispatch(logoutSuccess()))\r\n    .catch(err => setError())\r\n}\r\n\r\n//////////////////////////////////////////////////////////////\r\n// set redirect path\r\n\r\nexport const setRedirectPath = path => ({\r\n  type: actionTypes.SET_REDIRECT_PATH,\r\n  path\r\n})\r\n","import * as actionTypes from './actionTypes'\r\n\r\nimport { setError } from './index'\r\nimport { databaseRef } from '../config/firebase'\r\n\r\n////////////////////////////////////////////////////////////////////\r\n//add item to list - favorites / watch later\r\n\r\nexport const addToList = (listType, data, userId) => dispatch => {\r\n  return databaseRef\r\n    .child(listType)\r\n    .child(userId)\r\n    .push(data)\r\n    .catch(err => setError())\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////\r\n//remove item from list - favorites / watch later\r\n\r\nexport const removeFromList = (listType, itemId, userId) => dispatch => {\r\n  return databaseRef\r\n    .child(listType)\r\n    .child(userId)\r\n    .child(itemId)\r\n    .remove()\r\n    .catch(err => setError())\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////\r\n// fetch user list - favorite / watch later\r\n\r\nexport const fetchFavoriteListSuccess = list => ({\r\n  type: actionTypes.FETCH_FAVORITE_LIST_SUCCESS,\r\n  list\r\n})\r\n\r\nexport const fetchWatchLaterListSuccess = list => ({\r\n  type: actionTypes.FETCH_WATCH_LATER_LIST_SUCCESS,\r\n  list\r\n})\r\n\r\nexport const fetchList = (list, userId) => dispatch => {\r\n  return databaseRef\r\n    .child(list)\r\n    .child(userId)\r\n    .on('value', snapshot => {\r\n      if (list === 'favorite') {\r\n        return dispatch(fetchFavoriteListSuccess(snapshot.val()))\r\n      } else {\r\n        return dispatch(fetchWatchLaterListSuccess(snapshot.val()))\r\n      }\r\n    })\r\n}\r\n","import * as actionTypes from './actionTypes'\r\nimport { setError } from './index'\r\n\r\nimport axios from '../axios-orders'\r\n\r\nexport const setSearchResults = items => ({\r\n  type: actionTypes.SET_SEARCH_RESULTS,\r\n  items\r\n})\r\n\r\nexport const getSearchResults = queryWord => dispatch => {\r\n  return axios\r\n    .get(\r\n      `/search/multi?include_adult=false&language=en-US&page=1&query=${queryWord}&api_key=${\r\n        process.env.REACT_APP_TMDB_API\r\n      }`\r\n    )\r\n    .then(res => dispatch(setSearchResults(res.data)))\r\n    .catch(err => setError())\r\n}\r\n","import * as actionTypes from './actionTypes'\r\nimport { setError } from './index'\r\n\r\nimport axios from '../axios-orders'\r\n\r\n////////////////////////////////////////////////////////\r\nexport const setDiscoverMovieResults = movies => ({\r\n  type: actionTypes.SET_DISCOVER_MOVIE_RESULTS,\r\n  movies\r\n})\r\n\r\nexport const getDiscoverMovieResults = ({\r\n  year,\r\n  ratings,\r\n  sortBy,\r\n  orderBy\r\n}) => dispatch => {\r\n  return axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/discover/movie?language=en-US&include_adult=false&include_video=false&page=1\r\n      &primary_release_year=${year}\r\n      &vote_average.gte=${ratings.min}\r\n      &vote_average.lte=${ratings.max}\r\n      &sort_by=${sortBy}.${orderBy}\r\n      &api_key=${process.env.REACT_APP_TMDB_API}`\r\n    )\r\n    .then(res => dispatch(setDiscoverMovieResults(res.data)))\r\n    .catch(err => setError())\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n//\r\n\r\nexport const setDiscoverShowResults = shows => ({\r\n  type: actionTypes.SET_DISCOVER_SHOW_RESULTS,\r\n  shows\r\n})\r\n\r\nexport const getDiscoverShowResults = ({\r\n  year,\r\n  ratings,\r\n  sortBy,\r\n  orderBy\r\n}) => dispatch => {\r\n  return axios\r\n    .get(\r\n      `/discover/tv?language=en-US&page=1&include_null_first_air_dates=false\r\n        &first_air_date_year=${year}\r\n        &vote_average.gte=${ratings.min}\r\n        &bote_average.gte=${ratings.max}\r\n        &sort_by=${sortBy}.${orderBy}\r\n        &api_key=${process.env.REACT_APP_TMDB_API}`\r\n    )\r\n    .then(res => dispatch(setDiscoverShowResults(res.data)))\r\n    .catch(err => setError())\r\n}\r\n","export { setError } from './error'\r\n\r\nexport {\r\n  getCurrentMovies,\r\n  getPopularMovies,\r\n  getTopMovies,\r\n  getUpcomingMovies\r\n} from './movies'\r\n\r\nexport {\r\n  getCurrentShows,\r\n  getAiringTodayShows,\r\n  getPopularShows,\r\n  getTopShows\r\n} from './shows'\r\n\r\nexport {\r\n  setItemType,\r\n  setItemClear,\r\n  getQueryItem,\r\n  getQueryItemCredits,\r\n  getQueryItemVideos,\r\n  getSimilarItems\r\n} from './item'\r\n\r\nexport {\r\n  createUser,\r\n  loginUserWithEmailPassword,\r\n  loginUserWithSocial,\r\n  fetchUser,\r\n  logout,\r\n  setRedirectPath\r\n} from './auth'\r\n\r\nexport { addToList, removeFromList, fetchList } from './database'\r\n\r\nexport { getSearchResults } from './search'\r\n\r\nexport { getDiscoverMovieResults, getDiscoverShowResults } from './discover'\r\n"],"sourceRoot":""}