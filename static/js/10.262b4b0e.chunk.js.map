{"version":3,"sources":["components/AuthForm/index.jsx","views/Auth/index.jsx"],"names":["AuthForm","state","email","password","active","handleInput","e","setState","target","name","value","handleActiveAuth","authWithEmailPassword","preventDefault","props","signupUser","loginUserWithEmail","this","className","type","placeholder","onChange","onClick","loginUserWithSocial","Component","connect","dispatch","actions","Auth","isRedirect","isAuth","to","redirectPath","auth","userId"],"mappings":"kQAQaA,G,OAAb,2MAOEC,MAAQ,CACNC,MAAO,GACPC,SAAU,GACVC,OAAQ,SAVZ,EAaEC,YAAc,SAAAC,GACZ,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAfhC,EAmBEC,iBAAmB,WAEF,UADI,EAAKV,MAAhBG,OAEN,EAAKG,SAAS,CACZH,OAAQ,WAGV,EAAKG,SAAS,CACZH,OAAQ,WA3BhB,EAgCEQ,sBAAwB,SAAAN,GACtBA,EAAEO,iBADyB,MAES,EAAKZ,MAAjCC,EAFmB,EAEnBA,MAAOC,EAFY,EAEZA,SAAUC,EAFE,EAEFA,OAFE,EAGgB,EAAKU,MAAxCC,EAHmB,EAGnBA,WAAYC,EAHO,EAGPA,mBAEL,UAAXZ,EACFY,EAAmBd,EAAOC,GAE1BY,EAAWb,EAAOC,IAxCxB,wEA4CY,IACAC,EAAWa,KAAKhB,MAAhBG,OACR,OACE,yBAAKc,UAAU,aACb,yBAAKA,UAAU,qBACb,4BAAgB,UAAXd,EAAqB,SAAW,UAArC,iBAGF,0BAAMc,UAAU,mBACd,2BACEC,KAAK,QACLV,KAAK,QACLS,UAAU,yBACVE,YAAY,gBACZV,MAAOO,KAAKhB,MAAMC,MAClBmB,SAAUJ,KAAKZ,cAGjB,2BACEc,KAAK,WACLV,KAAK,WACLS,UAAU,yBACVE,YAAY,WACZV,MAAOO,KAAKhB,MAAME,SAClBkB,SAAUJ,KAAKZ,cAGjB,2BACEc,KAAK,SACLD,UAAU,qCACVR,MAAkB,UAAXN,EAAqB,SAAW,UACvCkB,QAASL,KAAKL,yBAIlB,oCAEA,yBAAKM,UAAU,0BACb,4BACEA,UAAU,4CACVI,QAASL,KAAKH,MAAMS,qBAFtB,yBAQF,4BAAQL,UAAU,oBAAoBI,QAASL,KAAKN,kBACtC,UAAXP,EACG,8BACA,gCA7Fd,GAA8BoB,cA8GfC,cACb,MAXyB,SAAAC,GAAQ,MAAK,CACtCX,WAAY,SAACb,EAAOC,GAAR,OACVuB,EAASC,IAAmBzB,EAAOC,KAErCa,mBAAoB,SAACd,EAAOC,GAAR,OAClBuB,EAASC,IAAmCzB,EAAOC,KAErDoB,oBAAqB,kBAAMG,EAASC,WAGvBF,CAGbzB,G,4CChHK,IAAM4B,EAAb,iLAOI,IAAMC,EAAaZ,KAAKH,MAAMgB,OAC5B,kBAAC,IAAD,CAAUC,GAAId,KAAKH,MAAMkB,eACvB,KAEJ,OACE,yBAAKd,UAAU,QACb,yBAAKA,UAAU,cAAf,eACCW,EACD,kBAAC,EAAD,WAfR,GAA0BL,aA0BXC,uBALS,SAAAxB,GAAK,MAAK,CAChC6B,OAA8B,OAAtB7B,EAAMgC,KAAKC,OACnBF,aAAc/B,EAAMgC,KAAKD,gBAGZP,CAAyBG","file":"static/js/10.262b4b0e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport * as actions from '../../actions'\r\n\r\nimport './styles.scss'\r\n\r\nexport class AuthForm extends Component {\r\n  static propTypes = {\r\n    signupUser: PropTypes.func,\r\n    loginUserWithEmail: PropTypes.func,\r\n    loginUserWithSocial: PropTypes.func\r\n  }\r\n\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    active: 'login'\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleActiveAuth = () => {\r\n    const { active } = this.state\r\n    if (active === 'login') {\r\n      this.setState({\r\n        active: 'signup'\r\n      })\r\n    } else {\r\n      this.setState({\r\n        active: 'login'\r\n      })\r\n    }\r\n  }\r\n\r\n  authWithEmailPassword = e => {\r\n    e.preventDefault()\r\n    const { email, password, active } = this.state\r\n    const { signupUser, loginUserWithEmail } = this.props\r\n\r\n    if (active === 'login') {\r\n      loginUserWithEmail(email, password)\r\n    } else {\r\n      signupUser(email, password)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { active } = this.state\r\n    return (\r\n      <div className='auth-form'>\r\n        <div className='auth-form__header'>\r\n          <h3>{active === 'login' ? 'Log in' : 'Sign up'} to see more</h3>\r\n        </div>\r\n\r\n        <form className='auth-form__form'>\r\n          <input\r\n            type='email'\r\n            name='email'\r\n            className='auth-form__form__input'\r\n            placeholder='Email address'\r\n            value={this.state.email}\r\n            onChange={this.handleInput}\r\n          />\r\n\r\n          <input\r\n            type='password'\r\n            name='password'\r\n            className='auth-form__form__input'\r\n            placeholder='Password'\r\n            value={this.state.password}\r\n            onChange={this.handleInput}\r\n          />\r\n\r\n          <input\r\n            type='submit'\r\n            className='auth-form__form__submit action-btn'\r\n            value={active === 'login' ? 'Log in' : 'Sign up'}\r\n            onClick={this.authWithEmailPassword}\r\n          />\r\n        </form>\r\n\r\n        <span>Or</span>\r\n\r\n        <div className='auth-form__social-btns'>\r\n          <button\r\n            className='auth-form__social-btns__google action-btn'\r\n            onClick={this.props.loginUserWithSocial}\r\n          >\r\n            Continue with Google\r\n          </button>\r\n        </div>\r\n\r\n        <button className='auth-form__active' onClick={this.handleActiveAuth}>\r\n          {active === 'login'\r\n            ? 'Not on Movie Rolls? Sign up'\r\n            : 'Already a member? Login'}\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signupUser: (email, password) =>\r\n    dispatch(actions.createUser(email, password)),\r\n\r\n  loginUserWithEmail: (email, password) =>\r\n    dispatch(actions.loginUserWithEmailPassword(email, password)),\r\n\r\n  loginUserWithSocial: () => dispatch(actions.loginUserWithSocial())\r\n})\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(AuthForm)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport AuthForm from '../../components/AuthForm'\r\n\r\nimport './styles.scss'\r\n\r\nexport class Auth extends Component {\r\n  static propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    redirectPath: PropTypes.string.isRequired,\r\n  }\r\n\r\n  render() {\r\n    const isRedirect = this.props.isAuth ? (\r\n      <Redirect to={this.props.redirectPath} />\r\n    ) : null\r\n\r\n    return (\r\n      <div className='auth'>\r\n        <div className='auth__logo'>movie rolls</div>\r\n        {isRedirect}\r\n        <AuthForm />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.userId !== null,\r\n  redirectPath: state.auth.redirectPath,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Auth)\r\n"],"sourceRoot":""}